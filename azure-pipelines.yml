trigger:
- main  # Run the pipeline whenever changes are pushed to the 'main' branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerImageName: yolov8-training1
  dockerTag: $(Build.BuildId)
  acrName: learnyolo  # Replace with your Azure Container Registry name
  containerName: yolov8-container1  # Name of the container to deploy
  ACR_USERNAME: learnyolo
  ACR_PASSWORD: fLYUjg3UUmYKwzuBIvvvgLFTEI0WvCLzSEJpZfQiUL+ACRCwtB+X

stages:
- stage: Build
  displayName: Build Docker Image
  jobs:
  - job: BuildDocker
    displayName: Build the Docker Image
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
    - script: |
        echo "Building the Docker image"
        docker build -t $(dockerImageName):$(dockerTag) .
      displayName: Build Docker Image
    - script: |
        echo "Logging in to Azure Container Registry"
        docker login $(acrName).azurecr.io -u $(ACR_USERNAME) -p $(ACR_PASSWORD)

        echo "Tagging the Docker image"
        docker tag $(dockerImageName):$(dockerTag) $(acrName).azurecr.io/$(dockerImageName):$(dockerTag)

        echo "Pushing the Docker image to Azure Container Registry (ACR)"
        docker push $(acrName).azurecr.io/$(dockerImageName):$(dockerTag)
      displayName: Push Docker Image to ACR
      env:  # Provide credentials as environment variables (use Azure DevOps secrets for security)
        ACR_USERNAME: $(ACR_USERNAME)
        ACR_PASSWORD: $(ACR_PASSWORD)

- stage: Deploy
  displayName: Deploy the Model
  dependsOn: Build
  jobs:
  - deployment: DeployToACI
    displayName: Deploy to Azure Container Instance (ACI)
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "Deploying the container to Azure Container Instances"
              az container create \
                --resource-group <resource-group-name> \  # Replace with your resource group
                --name $(containerName) \
                --image $(acrName).azurecr.io/$(dockerImageName):$(dockerTag) \
                --cpu 2 \
                --memory 4 \
                --ports 5000
            displayName: Deploy Container
